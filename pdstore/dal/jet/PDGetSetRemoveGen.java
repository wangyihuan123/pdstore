package pdstore.dal.jet;

import pdstore.*;
import java.util.Date;
import pdstore.dal.*;

public class PDGetSetRemoveGen
{   
  protected static String nl;
  public static synchronized PDGetSetRemoveGen create(String lineSeparator)
  {
    nl = lineSeparator;
    PDGetSetRemoveGen result = new PDGetSetRemoveGen();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "  // Code generated by PDGetSetRemoveGen:" + NL;
  protected final String TEXT_2 = NL;
  protected final String TEXT_3 = NL + "\t/**" + NL + "\t * Returns the instance connected to this instance through the role \"";
  protected final String TEXT_4 = "\"." + NL + "\t * @return the connected instance" + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\t public ";
  protected final String TEXT_5 = " get";
  protected final String TEXT_6 = "() throws PDStoreException {" + NL + "\t \treturn (";
  protected final String TEXT_7 = ")pdWorkingCopy.getInstance(this, role";
  protected final String TEXT_8 = "Id);" + NL + "\t }" + NL + "" + NL + "\t/**" + NL + "\t * Returns the instance(s) connected to this instance through the role \"";
  protected final String TEXT_9 = "\"." + NL + "\t * @return the connected instance(s)" + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\t public Collection<";
  protected final String TEXT_10 = "> get";
  protected final String TEXT_11 = "s() throws PDStoreException {" + NL + "\t \tSet<";
  protected final String TEXT_12 = "> result = new HashSet<";
  protected final String TEXT_13 = ">();" + NL + "\t \tGUID ";
  protected final String TEXT_14 = "TypeId = new GUID(\"";
  protected final String TEXT_15 = "\");" + NL + "\t\tpdWorkingCopy.getInstances(this, role";
  protected final String TEXT_16 = "Id, ";
  protected final String TEXT_17 = ".class, ";
  protected final String TEXT_18 = "TypeId, result);" + NL + "\t \treturn result;" + NL + "\t }" + NL + "\t ";
  protected final String TEXT_19 = NL + "   /**" + NL + "\t * Connects this instance to the given instance using role \"";
  protected final String TEXT_20 = "\"." + NL + "\t * If the given instance is null, nothing happens." + NL + "\t * @param ";
  protected final String TEXT_21 = " the instance to connect" + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\tpublic void add";
  protected final String TEXT_22 = "(";
  protected final String TEXT_23 = " ";
  protected final String TEXT_24 = ") throws PDStoreException {" + NL + "" + NL + "\t\t\tif (";
  protected final String TEXT_25 = " != null) {" + NL + "\t\t\t\t";
  protected final String TEXT_26 = NL + "\t\t\t\tpdWorkingCopy.addLink(this.id, role";
  protected final String TEXT_27 = "Id, ";
  protected final String TEXT_28 = ");" + NL + "\t\t\t}" + NL + "" + NL + "\t}" + NL;
  protected final String TEXT_29 = NL + "\t/**" + NL + "\t * Connects this instance to the given instance using role \"";
  protected final String TEXT_30 = "\"." + NL + "\t * If the given instance is null, nothing happens." + NL + "\t * @param ";
  protected final String TEXT_31 = " the instance to connect" + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\tpublic void add";
  protected final String TEXT_32 = "(";
  protected final String TEXT_33 = " ";
  protected final String TEXT_34 = ") throws PDStoreException {" + NL + "\t\tif (";
  protected final String TEXT_35 = " != null) {" + NL + "\t\t\tadd";
  protected final String TEXT_36 = "(";
  protected final String TEXT_37 = ".getId());" + NL + "\t\t}\t\t" + NL + "\t}";
  protected final String TEXT_38 = NL;
  protected final String TEXT_39 = NL + "\t/**" + NL + "\t * Removes the link from this instance through role \"";
  protected final String TEXT_40 = "\"." + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\tpublic void remove";
  protected final String TEXT_41 = "() throws PDStoreException {" + NL + "\t\tpdWorkingCopy.removeLink(this.id, role";
  protected final String TEXT_42 = "Id, " + NL + "\t\t\tpdWorkingCopy.getInstance(this, role";
  protected final String TEXT_43 = "Id));" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * Removes the link from this instance through role \"";
  protected final String TEXT_44 = "\" to the given instance, if the link exists." + NL + "\t * If there is no such link, nothing happens.";
  protected final String TEXT_45 = ".getId()" + NL + "\t * If the given instance is null, nothing happens." + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\tpublic void remove";
  protected final String TEXT_46 = "(Object ";
  protected final String TEXT_47 = ") throws PDStoreException {" + NL + "\t\tif (";
  protected final String TEXT_48 = "==null)" + NL + "\t\t\treturn;" + NL + "\t\tpdWorkingCopy.removeLink(this.id, role";
  protected final String TEXT_49 = "Id, ";
  protected final String TEXT_50 = ");" + NL + "\t}" + NL;
  protected final String TEXT_51 = NL + "   /**" + NL + "\t * Connects this instance to the given instance using role \"";
  protected final String TEXT_52 = "\"." + NL + "\t * If there is already an instance connected to this instance through role \"";
  protected final String TEXT_53 = "\", the link will be overwritten." + NL + "\t * If the given instance is null, an existing link is removed.\"" + NL + "\t * @param ";
  protected final String TEXT_54 = " the instance to connect" + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\tpublic void set";
  protected final String TEXT_55 = "(";
  protected final String TEXT_56 = " ";
  protected final String TEXT_57 = ") throws PDStoreException {" + NL + "\t\tpdWorkingCopy.setLink(this.id,  role";
  protected final String TEXT_58 = "Id, ";
  protected final String TEXT_59 = ");\t" + NL + "\t}";
  protected final String TEXT_60 = NL + "\t/**" + NL + "\t * Connects this instance to the given instance using role \"";
  protected final String TEXT_61 = "\"." + NL + "\t * If there is already an instance connected to this instance through role \"";
  protected final String TEXT_62 = "\", the link will be overwritten." + NL + "\t * If the given instance is null, an existing link is removed.\"" + NL + "\t * @param ";
  protected final String TEXT_63 = " the instance to connect" + NL + "\t * @throws PDStoreException" + NL + "\t */" + NL + "\tpublic void set";
  protected final String TEXT_64 = "(";
  protected final String TEXT_65 = " ";
  protected final String TEXT_66 = ") throws PDStoreException {" + NL + "\t\tset";
  protected final String TEXT_67 = "(";
  protected final String TEXT_68 = ".getId());" + NL + "\t}" + NL;
  protected final String TEXT_69 = NL;

    /**
     * generates getters, setters, and removers for a type and returns the generated code as a long string
     *
     * @param type1 - the PDType to generate
     */
	public String generate(PDRole role2)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
    stringBuffer.append(TEXT_1);
    
String roleName = role2.getName();
String camelName = PDGen.makeFirstSmall(PDGen.makeCamelCase(roleName));
String upperCamelName = PDGen.makeFirstBig(camelName);
PDType type2 = role2.getPartner().getAccessor();
// all complex types use generated data access classes
boolean useGeneratedClass = !((type2.getIsPrimitive()==null)? false : type2.getIsPrimitive()) 
	|| type2.getId().equals(PDStore.OBJECT_TYPEID);
String javaType = null;
Class<?> javaValueType = GUID.class;
if (useGeneratedClass) {
	Class<?> registeredClass = DALClassRegister.getDataClass(type2.getId());
	if (registeredClass != null) {
    	// if a class was already registered, use its name
    	javaType = registeredClass.getSimpleName();
	} else if (type2.getId().equals(PDStore.OBJECT_TYPEID)) {
		// if the relation is to Object, then use PDInstance
		javaType = "PDInstance";
	} else {
	    // if no class was registered, use the default name
	    // for generated access classes
	    javaType = "PD" + PDGen.makeCamelCase(type2.getName());
	}
} else {
	javaValueType = PDGen.getJavaValueType(type2);
	javaType = javaValueType.getSimpleName();
}

    stringBuffer.append(TEXT_2);
    //GETTER METHOD GENERATION
    stringBuffer.append(TEXT_3);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_5);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_7);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_9);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_10);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_11);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_12);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_13);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_14);
    stringBuffer.append(type2.getId());
    stringBuffer.append(TEXT_15);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_16);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_17);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_18);
    //ADDER METHOD GENERATION
    stringBuffer.append(TEXT_19);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_20);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_21);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_22);
    stringBuffer.append(javaValueType.getSimpleName());
    stringBuffer.append(TEXT_23);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_24);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_25);
    //since we are using addLink it shouldn't matter whether it is an add or a set
    stringBuffer.append(TEXT_26);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_27);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_28);
    	if (useGeneratedClass) { //overload it
    stringBuffer.append(TEXT_29);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_31);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_32);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_33);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_34);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_35);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_36);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_37);
    }
    stringBuffer.append(TEXT_38);
    //REMOVER METHOD GENERATION
    stringBuffer.append(TEXT_39);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_40);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_41);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_42);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_43);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_44);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_45);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_46);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_47);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_48);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_49);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_50);
    //SETTER METHOD GENERATION
    stringBuffer.append(TEXT_51);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_52);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_53);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_54);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_55);
    stringBuffer.append(javaValueType.getSimpleName());
    stringBuffer.append(TEXT_56);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_57);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_58);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_59);
    	if (useGeneratedClass) { //overload it
    stringBuffer.append(TEXT_60);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_61);
    stringBuffer.append(roleName);
    stringBuffer.append(TEXT_62);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_63);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_64);
    stringBuffer.append(javaType);
    stringBuffer.append(TEXT_65);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_66);
    stringBuffer.append(upperCamelName);
    stringBuffer.append(TEXT_67);
    stringBuffer.append(camelName);
    stringBuffer.append(TEXT_68);
    	}
    stringBuffer.append(TEXT_69);
    return stringBuffer.toString();
  }
}